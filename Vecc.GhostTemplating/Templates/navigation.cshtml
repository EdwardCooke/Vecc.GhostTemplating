@using Vecc.GhostTemplating
@using Microsoft.Extensions.Options

@model Vecc.GhostTemplating.IGetHeader
@inject IOptions<TemplatingOptions> templateOptions

@{
    var header = Model.GetHeader();
    var options = templateOptions.Value;
}

<div class="gh-head-inner inner">
    <div class="gh-head-brand">
        @if (header.RenderSitename)
        {
            <a class="gh-head-logo no-image" href="/">
                @options.SiteName
            </a>
        }
        <button class="gh-burger">
        </button>
    </div>
    <nav class="gh-head-menu">
        <ul class="nav">
            @foreach (var nav in header.Navigation)
            {
                <li class="nav-@(Guid.NewGuid().ToString("n").Substring(0, 8))">
                    <a href="@(nav.Url)">
                        @(nav.Label)
                    </a>
                </li>
            }
        </ul>
    </nav>
    <div class="gh-head-actions">
        @if (!string.IsNullOrWhiteSpace(options.FeedlyLink))
        {
            <a class="rss-button" href="@(options.FeedlyLink)" title="RSS" target="_blank" rel="noopener">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><circle cx="6.18" cy="17.82" r="2.18" /><path d="M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z" /></svg>
            </a>
        }
    </div>
</div>